[{"/home/talha-invozone/Documents/TrainingSession/ReactJS/learn-hooks/src/index.js":"1","/home/talha-invozone/Documents/TrainingSession/ReactJS/learn-hooks/src/reportWebVitals.js":"2","/home/talha-invozone/Documents/TrainingSession/ReactJS/learn-hooks/src/App.jsx":"3","/home/talha-invozone/Documents/TrainingSession/ReactJS/learn-hooks/src/components/Home.jsx":"4","/home/talha-invozone/Documents/TrainingSession/ReactJS/learn-hooks/src/components/About.jsx":"5","/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/index.js":"6","/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/reportWebVitals.js":"7","/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/App.jsx":"8","/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/components/About.jsx":"9","/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/components/header.jsx":"10","/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/components/generalInformation.jsx":"11","/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/components/education.jsx":"12","/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/components/subComponents/generalInformation.jsx":"13","/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/components/subComponents/skills.jsx":"14","/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/components/profile.jsx":"15","/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/usersData.js":"16","/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/components/editGeneralInformation.jsx":"17","/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/components/reactSelect.jsx":"18","/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/components/reactTableExample.jsx":"19","/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/components/editUser.jsx":"20","/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/components/auth/login.jsx":"21","/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/components/auth/register.jsx":"22","/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/util/firebase.js":"23","/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/authentication/Login.jsx":"24","/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/authentication/Register.jsx":"25","/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/authentication/dashboard.jsx":"26","/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/util/serviceAccountKey.js":"27","/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/authentication/RegistrationStep2.jsx":"28","/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/authentication/profile.jsx":"29","/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/authentication/PrivateRoutes.js":"30","/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/authentication/ForgerPassword.jsx":"31","/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/components/UploadFile.jsx":"32","/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/authentication/ChangePassword.jsx":"33"},{"size":493,"mtime":1610963709000,"results":"34","hashOfConfig":"35"},{"size":356,"mtime":1610964054000,"results":"36","hashOfConfig":"35"},{"size":1232,"mtime":1610975252000,"results":"37","hashOfConfig":"35"},{"size":87,"mtime":1610977888440,"results":"38","hashOfConfig":"35"},{"size":89,"mtime":1610969436000,"results":"39","hashOfConfig":"35"},{"size":493,"mtime":1611164891468,"results":"40","hashOfConfig":"41"},{"size":356,"mtime":1610964054000,"results":"42","hashOfConfig":"41"},{"size":3221,"mtime":1611923067057,"results":"43","hashOfConfig":"41"},{"size":252,"mtime":1611165515388,"results":"44","hashOfConfig":"41"},{"size":1588,"mtime":1611923206739,"results":"45","hashOfConfig":"41"},{"size":3338,"mtime":1611582440732,"results":"46","hashOfConfig":"41"},{"size":2670,"mtime":1611140142304,"results":"47","hashOfConfig":"48"},{"size":2847,"mtime":1611297736430,"results":"49","hashOfConfig":"41"},{"size":3185,"mtime":1611325722860,"results":"50","hashOfConfig":"41"},{"size":2490,"mtime":1611571924434,"results":"51","hashOfConfig":"41"},{"size":640,"mtime":1611568394702,"results":"52","hashOfConfig":"41"},{"size":4585,"mtime":1611572065721,"results":"53","hashOfConfig":"41"},{"size":1599,"mtime":1611558439919,"results":"54","hashOfConfig":"41"},{"size":4557,"mtime":1611845317795,"results":"55","hashOfConfig":"41"},{"size":3482,"mtime":1611654373305,"results":"56","hashOfConfig":"41"},{"size":1940,"mtime":1611658607703,"results":"57","hashOfConfig":"41"},{"size":2566,"mtime":1611649908572,"results":"58","hashOfConfig":"41"},{"size":571,"mtime":1611919337010,"results":"59","hashOfConfig":"41"},{"size":2790,"mtime":1611847804237,"results":"60","hashOfConfig":"41"},{"size":2830,"mtime":1611847320528,"results":"61","hashOfConfig":"41"},{"size":4594,"mtime":1611845257548,"results":"62","hashOfConfig":"41"},{"size":2375,"mtime":1611729858575,"results":"63","hashOfConfig":"41"},{"size":5417,"mtime":1611919844395,"results":"64","hashOfConfig":"41"},{"size":2824,"mtime":1611922878047,"results":"65","hashOfConfig":"41"},{"size":620,"mtime":1611922676245,"results":"66","hashOfConfig":"41"},{"size":2335,"mtime":1611846589748,"results":"67","hashOfConfig":"41"},{"size":2668,"mtime":1611916546967,"results":"68","hashOfConfig":"41"},{"size":3911,"mtime":1611929838906,"results":"69","hashOfConfig":"41"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10wie67",{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"j0p1i5",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1da6wfe",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"82"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"82"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"82"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"82"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"82"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/talha-invozone/Documents/TrainingSession/ReactJS/learn-hooks/src/index.js",[],"/home/talha-invozone/Documents/TrainingSession/ReactJS/learn-hooks/src/reportWebVitals.js",[],"/home/talha-invozone/Documents/TrainingSession/ReactJS/learn-hooks/src/App.jsx",[],"/home/talha-invozone/Documents/TrainingSession/ReactJS/learn-hooks/src/components/Home.jsx",[],"/home/talha-invozone/Documents/TrainingSession/ReactJS/learn-hooks/src/components/About.jsx",[],"/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/index.js",[],[],"/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/reportWebVitals.js",[],"/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/App.jsx",["145","146"],"/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/components/About.jsx",[],"/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/components/header.jsx",[],"/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/components/generalInformation.jsx",[],"/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/components/education.jsx",[],"/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/components/subComponents/generalInformation.jsx",[],"/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/components/subComponents/skills.jsx",[],"/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/components/profile.jsx",[],"/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/usersData.js",[],"/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/components/editGeneralInformation.jsx",[],"/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/components/reactSelect.jsx",["147","148"],"import React, { useState, useRef } from 'react'\nimport Select from 'react-select'\nimport { Button, Container } from '@material-ui/core'\n\nconst options = [\n  { value: 'php', label: 'php' },\n  { value: 'css', label: 'css' },\n  { value: 'html', label: 'html' },\n  { value: 'javascript', label: 'javascript' },\n  { value: 'reactjs', label: 'reactjs' },\n  { value: 'nodejs', label: 'nodejs' },\n  { value: 'sass', label: 'sass' },\n  { value: 'postgres', label: 'postgres' },\n  { value: 'laravel', label: 'laravel' },\n  { value: 'scss', label: 'scss' },\n]\nconst ReactSelect = () => {\n  const [selectedOption, setSelectedOption] = useState(null)\n\n  const selectRef = useRef()\n  const handleChange = (selectedOption) => {\n    setSelectedOption({ selectedOption })\n  }\n\n  const changeDefaultValue = () => {\n    // selectRef.current.props.changeDefaultValue === options[2]\n    console.log('selectRef.current', selectRef.current.props.defaultValue)\n    console.log('the default value', options[2])\n\n    selectRef.current.props.defaultValue = options[2]\n    // selectRef.current = selectedOption.defaultValue\n    // console.log('changeDefaultValue called')\n  }\n\n  return (\n    <div>\n      <br /> <br /> <br />\n      <br />\n      <Container size=\"xs\">\n        <Select\n          ref={selectRef}\n          onChange={() => {\n            {\n              handleChange(), changeDefaultValue()\n            }\n          }}\n          options={options}\n          defaultValue={options[0]}\n        />{' '}\n        <br />\n        {/* <h3>{selectRef.current}</h3> */}\n      </Container>\n    </div>\n  )\n}\nexport { ReactSelect }\n","/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/components/reactTableExample.jsx",[],"/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/components/editUser.jsx",["149"],"import React, { useEffect, useState, useRef } from 'react'\nimport { Button, TextField, Container, Card, Chip } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport profile from '../usersData'\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '40ch',\n    },\n  },\n}))\nconst EditUser = (props) => {\n  const history = useHistory()\n  const location = useLocation()\n\n  const nameRef = useRef('')\n  const designationRef = useRef('')\n  const companyRef = useRef('')\n  const addressRef = useRef('')\n  const formRef = useRef('')\n  const classes = useStyles()\n  const [name, setName] = useState('')\n  const [designation, setDesignation] = useState('')\n  const [company, setCompany] = useState('')\n  const [address, setAdress] = useState('')\n\n  const generalInformation = localStorage.getItem('generalInfo')\n  const gI = JSON.parse(generalInformation)\n\n  console.log('information', location.state.rows.name)\n\n  useEffect(() => {\n    setName(location.state.rows.name)\n    setDesignation(location.state.rows.designation)\n    setCompany(location.state.rows.company)\n    setAdress(location.state.rows.address)\n  }, [props.firstName, props.lastName, props.phone, props.address])\n  const updateGeneralInfo = () => {\n    profile[location.state.rows.id].name = nameRef.current.value\n    profile[location.state.rows.id].designation = designationRef.current.value\n    profile[location.state.rows.id].company = companyRef.current.value\n    profile[location.state.rows.id].address = addressRef.current.value\n\n    history.push('/react-table')\n  }\n\n  const newArr = []\n  const skillsArray = localStorage.getItem('skills')\n  if (skillsArray) {\n    const arr = skillsArray.split(',')\n\n    arr.forEach((ele) => {\n      const obj = {}\n      obj.value = ele\n      obj.name = ele\n      newArr.push(obj)\n    })\n  }\n  return (\n    <div>\n      {' '}\n      <br />\n      <br />\n      <br />\n      <br />\n      <Container maxWidth=\"sm\" align=\"center\">\n        <Card>\n          <form className={classes.root} noValidate autoComplete=\"off\" ref={formRef}>\n            <TextField\n              inputRef={nameRef}\n              id=\"standard-basic\"\n              label=\"Name\"\n              onChange={(e) => setName(e.target.value)}\n              value={name}\n            />{' '}\n            <br />\n            <TextField\n              inputRef={designationRef}\n              id=\"standard-basic\"\n              label=\"Designation\"\n              onChange={(e) => setDesignation(e.target.value)}\n              value={designation}\n            />{' '}\n            <br />\n            <TextField\n              inputRef={companyRef}\n              id=\"standard-basic\"\n              label=\"Company\"\n              onChange={(e) => setCompany(e.target.value)}\n              value={company}\n            />{' '}\n            <br />\n            <TextField\n              inputRef={addressRef}\n              id=\"standard-basic\"\n              label=\"Address\"\n              color=\"inherit\"\n              onChange={(e) => setAdress(e.target.value)}\n              value={address}\n            />{' '}\n            <br />\n            <br />\n            <Button onClick={updateGeneralInfo} variant=\"contained\" color=\"primary\">\n              Update\n            </Button>\n            <br />\n            <br />\n          </form>\n        </Card>\n      </Container>\n    </div>\n  )\n}\nexport { EditUser }\n","/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/components/auth/login.jsx",["150","151"],"import React, { useRef } from 'react'\nimport { Container, Card, Grid, TextField, Button } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport firebase from '../../util/firebase'\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '37ch',\n    },\n  },\n}))\nconst Login = () => {\n  const classes = useStyles()\n  const style = { marginTop: '100px' }\n  const emailRef = useRef()\n  const passwordRef = useRef()\n  const login = () => {\n    console.log('emailRef', emailRef.current.value)\n    console.log('passwordRef', passwordRef.current.value)\n\n    firebase.database.ref('users').orderByKey().limitToLast(100)\n    firebase.database.ref('users').push(emailRef.current.value)\n    firebase.database.ref('users').push(passwordRef.current.value)\n  }\n  return (\n    <div style={style}>\n      <Container size=\"sm\">\n        <Grid container spacing={3}>\n          <Grid item xs={4}></Grid>\n          <Grid item xs={4}>\n            <Card style={{ padding: '20px' }}>\n              <form className={classes.root} noValidate autoComplete=\"off\">\n                <TextField\n                  inputRef={emailRef}\n                  id=\"standard-basic\"\n                  label=\"Email\"\n                  type=\"email\"\n                />\n                <TextField\n                  inputRef={passwordRef}\n                  id=\"standard-basic\"\n                  type=\"password\"\n                  label=\"Password\"\n                />\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  size=\"small\"\n                  style={{ width: '45ch' }}\n                  onClick={login}\n                >\n                  Login\n                </Button>\n              </form>\n            </Card>\n          </Grid>\n          <Grid item xs={4}></Grid>\n        </Grid>\n      </Container>\n    </div>\n  )\n}\n\nexport { Login }\n",[],"/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/components/auth/register.jsx",[],"/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/util/firebase.js",[],"/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/authentication/Login.jsx",[],"/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/authentication/Register.jsx",[],"/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/authentication/dashboard.jsx",["152"],"import React, { useMemo, useEffect, useState } from 'react'\nimport { Button, Container, Table, Grid } from '@material-ui/core'\nimport { firebase, db } from '../util/firebase'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { useTable } from 'react-table'\nimport profile from '../usersData'\nconst Dashboard = () => {\n  const style = { marginTop: '100px' }\n  const history = useHistory()\n  const location = useLocation()\n  const [allUsers, setAllUsers] = useState([])\n\n  const logoutUser = () => {\n    firebase.auth().signOut()\n    history.push('/login')\n  }\n\n  // const getAllUsers = () => {\n  //   db.collection('users')\n  //     .get()\n  //     .then((snapshot) => {\n  //       const users = []\n  //       snapshot.forEach((docs) => {\n  //         const data = docs.data()\n  //         console.log('data', data)\n  //         users.push(data)\n  //       })\n  //       setAllUsers(users)\n  //       console.log('users in function', users)\n  //     })\n  //     .catch((error) => {\n  //       console.log(error)\n  //     })\n  // }\n\n  useEffect(() => {\n    // if (allUsers.length > 0) return\n    // console.log('getAllUsers()')\n    // getAllUsers()\n  }, [])\n\n  const data = useMemo(() => profile, [profile])\n\n  const columns = useMemo(() => [\n    {\n      Header: 'First Name',\n      accessor: 'first_name',\n    },\n    {\n      Header: 'Last Name',\n      accessor: 'last_name',\n    },\n    {\n      Header: 'Email',\n      accessor: 'email',\n    },\n    {\n      Header: 'Company',\n      accessor: 'company',\n    },\n    {\n      Header: 'Designation',\n      accessor: 'designation',\n    },\n    {\n      Header: 'Action',\n      accessor: 'Action',\n      // eslint-disable-next-line react/display-name\n      Cell: (cell) => (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          value={cell.accessor}\n          onClick={() => history.push('/edit-user')}\n        >\n          Edit\n        </Button>\n      ),\n    },\n  ])\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({ columns, data })\n\n  const addNewUser = () => {\n    console.log('New use is going to be add')\n  }\n\n  // console.log('allUsers here', allUsers)\n  return (\n    <Container size=\"sm\">\n      <div style={style}>\n        <Grid container spacing={3}>\n          <Grid item xs={4}>\n            <h4>Welcome:</h4>\n            {/* <h5>{location.state.email}</h5> */}\n          </Grid>\n          <Grid item xs={5}></Grid>\n          <Grid item xs={3}>\n            <Button variant=\"contained\" color=\"primary\" onClick={addNewUser}>\n              Add New User\n            </Button>\n            &nbsp;&nbsp;\n            <Button variant=\"contained\" color=\"primary\" onClick={logoutUser}>\n              Logout\n            </Button>\n          </Grid>\n        </Grid>\n        <br />\n\n        <Table {...getTableProps()} style={{ border: 'solid 1px blue' }}>\n          <thead>\n            {headerGroups.map((headerGroup) => (\n              // eslint-disable-next-line react/jsx-key\n              <tr\n                {...headerGroup.getHeaderGroupProps()}\n                style={{\n                  borderBottom: 'solid 3px red',\n                  background: 'aliceblue',\n                  color: 'black',\n                  fontWeight: 'bold',\n                }}\n              >\n                {headerGroup.headers.map((column) => (\n                  // eslint-disable-next-line react/jsx-key\n                  <th {...column.getHeaderProps()}> {column.render('Header')} </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()}>\n            {rows.map((row) => {\n              prepareRow(row)\n\n              return (\n                // eslint-disable-next-line react/jsx-key\n                <tr {...row.getRowProps()}>\n                  {row.cells.map((cell) => {\n                    // eslint-disable-next-line react/jsx-key\n                    return (\n                      // eslint-disable-next-line react/jsx-key\n                      <td\n                        {...cell.getCellProps()}\n                        style={{\n                          padding: '10px',\n                          border: 'solid 1px gray',\n                          background: 'papayawhip',\n                        }}\n                      >\n                        {cell.render('Cell')}\n                      </td>\n                    )\n                  })}\n                </tr>\n              )\n            })}\n          </tbody>\n        </Table>\n      </div>\n    </Container>\n  )\n}\nexport { Dashboard }\n","/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/util/serviceAccountKey.js",[],"/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/authentication/RegistrationStep2.jsx",["153"],"import React, { useRef, useState } from 'react'\n\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Container, Card, Grid, TextField, Button, Avatar } from '@material-ui/core'\nimport { deepPurple, deepOrange } from '@material-ui/core/colors'\nimport { Alert } from '@material-ui/lab'\n\nimport { firebase, db } from '../util/firebase'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '37ch',\n    },\n  },\n  top: {\n    marginTop: 100,\n  },\n  imgRoot: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(2),\n      position: 'relative',\n      height: 130,\n      width: 130,\n      marginLeft: 100,\n    },\n  },\n  orange: {\n    color: theme.palette.getContrastText(deepOrange[500]),\n    backgroundColor: deepOrange[500],\n  },\n}))\n\nconst RegistrationStep2 = () => {\n  const classes = useStyles()\n  const location = useLocation()\n  const history = useHistory()\n  const [error, setError] = useState()\n  const mobileNumberRef = useRef()\n  const qualificationRef = useRef()\n  const designationRef = useRef()\n  const companyRef = useRef()\n  const addressRef = useRef()\n  const [imgUrl, setImgUrl] = useState()\n\n  const saveUserInformation = () => {\n    if (mobileNumberRef.current.value.length <= 0) {\n      setError('mobileNumber is requried')\n    } else if (qualificationRef.current.value.length <= 0) {\n      setError('qualification is requried')\n    } else if (designationRef.current.value.length <= 0) {\n      setError('designation is requried')\n    } else if (companyRef.current.value.length <= 0) {\n      setError('company is requried')\n    } else if (addressRef.current.value.length <= 0) {\n      setError('address is requried')\n    } else {\n      setError('')\n\n      db.collection('userDetails')\n        .add({\n          mobileNumber: mobileNumberRef.current.value,\n          qualification: qualificationRef.current.value,\n          designation: designationRef.current.value,\n          company: companyRef.current.value,\n          address: addressRef.current.value,\n          profilePicture: imgUrl,\n          userId: location.state.userId,\n        })\n        .then(function (docRef) {\n          // console.log('Document written with ID: ', docRef.id)\n          // console.log('Document written: ', docRef)\n          const userData = docRef\n          mobileNumberRef.current.value = ''\n          qualificationRef.current.value = ''\n          designationRef.current.value = ''\n          companyRef.current.value = ''\n          addressRef.current.value = ''\n          history.push('/profile')\n          // history.push('/register-step-2', { userId: user.uid })\n        })\n        .catch(function (e) {\n          setError(e)\n        })\n    }\n  }\n\n  const uploadImage = async (e) => {\n    // console.log('bawa g sialkot', e.target.files[0])\n    const file = e.target.files[0]\n    const fRef = firebase.storage().ref()\n    const fileRef = fRef.child(file.name)\n    await fileRef.put(file)\n    const fileUrl = await fileRef.getDownloadURL()\n    console.log('my fileUrl', fileUrl)\n    setImgUrl(fileUrl)\n  }\n\n  return (\n    <div className={classes.top}>\n      <Container size=\"sm\">\n        <Grid container spacing={3}>\n          <Grid item xs={4}></Grid>\n          <Grid item xs={4}>\n            <Card style={{ padding: '20px' }}>\n              {error && <Alert severity=\"error\">{error}</Alert>}\n              <form className={classes.root} noValidate autoComplete=\"off\">\n                <div className={classes.imgRoot}>\n                  <Avatar\n                    type=\"file\"\n                    className={classes.orange}\n                    src={imgUrl}\n                  ></Avatar>\n                </div>\n\n                {!imgUrl && (\n                  <TextField\n                    id=\"standard-basic\"\n                    label=\"Upload Image\"\n                    type=\"file\"\n                    onChange={uploadImage}\n                  />\n                )}\n                <TextField\n                  inputRef={mobileNumberRef}\n                  id=\"standard-basic\"\n                  label=\"Mobile No\"\n                  type=\"number\"\n                />\n                <TextField\n                  inputRef={qualificationRef}\n                  id=\"standard-basic\"\n                  type=\"text\"\n                  label=\"Qualification\"\n                />\n                <TextField\n                  inputRef={designationRef}\n                  id=\"standard-basic\"\n                  type=\"text\"\n                  label=\"Designation\"\n                />\n                <TextField\n                  inputRef={companyRef}\n                  id=\"standard-basic\"\n                  type=\"text\"\n                  label=\"Company\"\n                />\n                <TextField\n                  inputRef={addressRef}\n                  id=\"standard-basic\"\n                  type=\"text\"\n                  label=\"Address\"\n                />\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  style={{ width: '42ch' }}\n                  onClick={saveUserInformation}\n                >\n                  Finish Register\n                </Button>\n              </form>\n            </Card>\n          </Grid>\n          <Grid item xs={4}></Grid>\n        </Grid>\n      </Container>\n    </div>\n  )\n}\n\nexport { RegistrationStep2 }\n","/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/authentication/profile.jsx",["154","155"],"import React, { useEffect, useRef, useState, useContext } from 'react'\n\nimport { useLocation, useHistory, Redirect } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Container, Card, Grid, TextField, Button } from '@material-ui/core'\nimport { Alert } from '@material-ui/lab'\n\nimport { firebase, db, firebaseConfig } from '../util/firebase'\nimport { AuthContext } from './PrivateRoutes'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '37ch',\n    },\n  },\n  top: {\n    marginTop: 100,\n  },\n  bottom: {\n    marginBottom: 50,\n  },\n}))\n\nconst userProfile = () => {\n  const { currentUser } = useContext(AuthContext)\n  if (!currentUser) {\n    return <Redirect to=\"/login\" />\n  }\n\n  console.log('ahahahaha current user', currentUser)\n  const classes = useStyles()\n  const location = useLocation()\n  const history = useHistory()\n  const [data, setData] = useState()\n\n  useEffect(() => {\n    var loginedUser = firebase.auth().currentUser\n\n    if (loginedUser) {\n      db.collection('userDetails')\n        .where('userId', '==', loginedUser.uid)\n        .get()\n        .then(function (querySnapshot) {\n          querySnapshot.forEach(function (doc) {\n            const dataItems = []\n            const myData = doc.data()\n            dataItems.push(myData)\n            setData(dataItems)\n          })\n        })\n        .catch(function (error) {\n          console.log('Error getting documents: ', error)\n        })\n    }\n  }, [])\n\n  const logoutUser = () => {\n    firebase.auth().signOut()\n    history.push('/login')\n  }\n  return (\n    <div className={classes.top}>\n      <Container size=\"sm\">\n        <Grid container spacing={3}>\n          <Grid item xs={10}>\n            <Card style={{ padding: '20px' }}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.bottom}\n                onClick={logoutUser}\n              >\n                Logout\n              </Button>\n              <h5>Welcome:</h5>\n              <h6>{firebase.auth().currentUser.email}</h6>\n              {data &&\n                data.map((d) => (\n                  // eslint-disable-next-line react/jsx-key\n                  <p>\n                    <img src={d.profilePicture} alt=\"\" />\n                    <br />\n                    <br />\n                    {d.address} <br />\n                    <br /> {d.company}\n                    <br />\n                    <br /> {d.designation}\n                    <br />\n                    <br /> {d.qualification}\n                    <br />\n                    <br /> {d.mobileNumber}\n                  </p>\n                ))}\n            </Card>\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  )\n}\n\nexport { userProfile }\n","/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/authentication/PrivateRoutes.js",[],"/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/authentication/ForgerPassword.jsx",[],"/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/components/UploadFile.jsx",["156"],"import React, { useRef, useState, useContext, useEffect } from 'react'\nimport { Container, Card, Grid, TextField, Button, Avatar } from '@material-ui/core'\nimport { deepPurple, deepOrange } from '@material-ui/core/colors'\nimport Alert from '@material-ui/lab/Alert'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { firebase } from '../util/firebase'\n// import { useHistory, Link, Redirect } from 'react-router-dom'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '37ch',\n    },\n  },\n  imgRoot: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(2),\n      position: 'relative',\n      height: 130,\n      width: 130,\n      marginLeft: 100,\n    },\n  },\n  orange: {\n    color: theme.palette.getContrastText(deepOrange[500]),\n    backgroundColor: deepOrange[500],\n  },\n}))\nconst UploadFile = () => {\n  const classes = useStyles()\n  const style = { marginTop: '100px' }\n  const imageRef = useRef()\n  const [imgUrl, setImageUrl] = useState()\n\n  //   const { currentUser } = useContext(AuthContext)\n  //   if (currentUser) {\n  //     return <Redirect to=\"/profile\" />\n  //   }\n\n  const uploadImage = async (e) => {\n    // console.log('bawa g sialkot', e.target.files[0])\n    const file = e.target.files[0]\n    const fRef = firebase.storage().ref()\n    const fileRef = fRef.child(file.name)\n    await fileRef.put(file)\n    const fileUrl = await fileRef.getDownloadURL()\n    console.log('my fileUrl', fileUrl)\n    setImageUrl(fileUrl)\n  }\n  return (\n    <div style={style}>\n      <Container size=\"sm\">\n        <Grid container spacing={3}>\n          <Grid item xs={4}></Grid>\n          <Grid item xs={4}>\n            <Card style={{ padding: '20px' }}>\n              {/* {passwordError && <Alert severity=\"error\">{passwordError}</Alert>} */}\n              <form\n                // ref={formRef}\n                className={classes.root}\n                noValidate\n                autoComplete=\"off\"\n              >\n                <div className={classes.imgRoot}>\n                  <Avatar\n                    type=\"file\"\n                    className={classes.orange}\n                    src={imgUrl}\n                  ></Avatar>\n                </div>\n                <TextField\n                  inputRef={imageRef}\n                  id=\"standard-basic\"\n                  label=\"Upload Image\"\n                  type=\"file\"\n                  onChange={uploadImage}\n                  src={imgUrl}\n                />\n              </form>\n            </Card>\n          </Grid>\n          <Grid item xs={4}></Grid>\n        </Grid>\n      </Container>\n    </div>\n  )\n}\nexport { UploadFile }\n","/home/talha-invozone/Documents/TrainingSession/ReactJS/assignment-project-2/src/authentication/ChangePassword.jsx",["157"],{"ruleId":"158","severity":1,"message":"159","line":41,"column":3,"nodeType":"160","messageId":"161","endLine":41,"endColumn":14},{"ruleId":"158","severity":1,"message":"159","line":42,"column":3,"nodeType":"160","messageId":"161","endLine":42,"endColumn":14},{"ruleId":"158","severity":1,"message":"159","line":27,"column":5,"nodeType":"160","messageId":"161","endLine":27,"endColumn":16},{"ruleId":"158","severity":1,"message":"159","line":28,"column":5,"nodeType":"160","messageId":"161","endLine":28,"endColumn":16},{"ruleId":"158","severity":1,"message":"159","line":32,"column":3,"nodeType":"160","messageId":"161","endLine":32,"endColumn":14},{"ruleId":"158","severity":1,"message":"159","line":19,"column":5,"nodeType":"160","messageId":"161","endLine":19,"endColumn":16},{"ruleId":"158","severity":1,"message":"159","line":20,"column":5,"nodeType":"160","messageId":"161","endLine":20,"endColumn":16},{"ruleId":"158","severity":1,"message":"159","line":91,"column":5,"nodeType":"160","messageId":"161","endLine":91,"endColumn":16},{"ruleId":"158","severity":1,"message":"159","line":98,"column":5,"nodeType":"160","messageId":"161","endLine":98,"endColumn":16},{"ruleId":"158","severity":1,"message":"159","line":32,"column":3,"nodeType":"160","messageId":"161","endLine":32,"endColumn":14},{"ruleId":"158","severity":1,"message":"159","line":54,"column":11,"nodeType":"160","messageId":"161","endLine":54,"endColumn":22},{"ruleId":"158","severity":1,"message":"159","line":49,"column":5,"nodeType":"160","messageId":"161","endLine":49,"endColumn":16},{"ruleId":"158","severity":1,"message":"159","line":68,"column":15,"nodeType":"160","messageId":"161","endLine":68,"endColumn":26},"no-console","Unexpected console statement.","MemberExpression","unexpected"]